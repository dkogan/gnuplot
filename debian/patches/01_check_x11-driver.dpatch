#! /bin/sh /usr/share/dpatch/dpatch-run
## 01_check_x11-driver.dpatch by Thierry Randrianiriana  <randrianiriana@gmail.com>

@DPATCH@

--- gnuplot-4.2.0-orig/src/term.c	2006-10-06 02:52:18.000000000 +0300
+++ gnuplot-4.2.0/src/term.c	2007-03-24 07:35:45.236795706 +0300
@@ -152,7 +152,7 @@
     { NULL, S_ENC_INVALID }
 };
 
-const char *arrow_head_names[4] = 
+const char *arrow_head_names[4] =
     {"nohead", "head", "backhead", "heads"};
 
 /* HBB 20020225: moved here, from ipc.h, where it never should have
@@ -584,7 +584,7 @@
     /* Sync point for epslatex text positioning */
     if (term->layer)
 	(term->layer)(TERM_LAYER_END_TEXT);
-    
+
     if (!multiplot) {
         FPRINTF((stderr, "- calling term->text()\n"));
         (*term->text) ();
@@ -666,7 +666,7 @@
 	    if (END_OF_COMMAND) {
 	        int_error(c_token,"expecting '<num_cols>,<num_rows>'");
 	    }
-	    
+
 	    /* read row,col */
 	    mp_layout.num_rows = (int) real(const_express(&a));
 	    if (END_OF_COMMAND || !equals(c_token,",") )
@@ -676,13 +676,13 @@
 	    if (END_OF_COMMAND)
 	        int_error(c_token, "expecting <num_cols>");
 	    mp_layout.num_cols = (int) real(const_express(&a));
-	
+
 	    /* remember current values of the plot size */
 	    mp_layout.prev_xsize = xsize;
 	    mp_layout.prev_ysize = ysize;
 	    mp_layout.prev_xoffset = xoffset;
 	    mp_layout.prev_yoffset = yoffset;
-	
+
 	    mp_layout.act_row = 0;
 	    mp_layout.act_col = 0;
 
@@ -771,7 +771,7 @@
     } else {
 	mp_layout.title_height = 0.0;
     }
-    
+
     mp_layout_size_and_offset();
 
 #ifdef USE_MOUSE
@@ -1250,7 +1250,7 @@
         }
 
 	/* backward arrow head */
-        if ((head & BACKHEAD) && !clip_point(sx,sy)) { 
+        if ((head & BACKHEAD) && !clip_point(sx,sy)) {
             if (curr_arrow_headfilled==2) {
                 /* draw filled backward arrow head */
                 filledhead[0].x = sx - xm;
@@ -1298,7 +1298,7 @@
 
     /* Restore previous clipping box */
     clip_area = clip_save;
-	
+
 }
 
 #define TERM_PROTO
@@ -1562,6 +1562,33 @@
     return (t);
 }
 
+#ifdef X11
+int
+x11driver_found()
+{
+  char *binname = "/gnuplot_x11";
+  char *fullname;
+  struct stat buf;
+
+  fullname = (char*)malloc(strlen(X11_DRIVER_DIR) + strlen(binname) + 1);
+  strcpy(fullname, X11_DRIVER_DIR);
+  strcat(fullname, binname);
+
+  /* exists? */
+  if (stat(fullname, &buf)) {
+    free(fullname);
+    return 0;
+  }
+
+  free(fullname);
+  /* executable? */
+  if (buf.st_mode && S_IXOTH)
+    return 1;
+
+  return 0;
+}
+#endif
+
 /*
  * Routine to detect what terminal is being used (or do anything else
  * that would be nice).  One anticipated (or allowed for) side effect
@@ -1652,12 +1679,18 @@
         env_term = getenv("TERM");      /* try $TERM */
         if (term_name == (char *) NULL
             && env_term != (char *) NULL && strcmp(env_term, "xterm") == 0)
-            term_name = "x11";
+	  term_name = "x11";
         display = getenv("DISPLAY");
         if (term_name == (char *) NULL && display != (char *) NULL)
-            term_name = "x11";
+	  term_name = "x11";
         if (X11_Display)
-            term_name = "x11";
+	  term_name = "x11";
+	/* if x11 was selected check for driver */
+	if (term_name && (strcmp(term_name, "x11") == 0) && !x11driver_found() && isatty(fileno(stdin))) {
+	  printf("*** X11 output driver not found, switching to dumb terminal!\n");
+	  printf("*** If you want to use the X11 output, please install the ""gnuplot-x11"" package.\n");
+	  term_name = "dumb";
+	};
 #endif /* x11 */
 
 #ifdef AMIGA
@@ -2743,7 +2776,7 @@
     return FALSE;
 }
 
-/* Utility routine for drivers to accept an explicit size for the 
+/* Utility routine for drivers to accept an explicit size for the
  * output image.
  */
 size_units
